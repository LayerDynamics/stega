import { AnyMap, originalPositionFor, generatedPositionFor, eachMapping } from 'https://esm.sh/v135/@jridgewell/trace-mapping@0.3.25/dist/types/trace-mapping.d.ts';
import { GenMapping, maybeAddMapping, toDecodedMap, toEncodedMap, setSourceContent } from 'https://esm.sh/v135/@jridgewell/gen-mapping@0.3.5/dist/types/gen-mapping.d.ts';
import type { TraceMap, SourceMapInput, SectionedSourceMapInput, DecodedSourceMap } from 'https://esm.sh/v135/@jridgewell/trace-mapping@0.3.25/dist/types/trace-mapping.d.ts';
export type { TraceMap, SourceMapInput, SectionedSourceMapInput, DecodedSourceMap };
import type { Mapping, EncodedSourceMap } from 'https://esm.sh/v135/@jridgewell/gen-mapping@0.3.5/dist/types/gen-mapping.d.ts';
export type { Mapping, EncodedSourceMap };
export declare class SourceMapConsumer {
    private _map;
    file: TraceMap['file'];
    names: TraceMap['names'];
    sourceRoot: TraceMap['sourceRoot'];
    sources: TraceMap['sources'];
    sourcesContent: TraceMap['sourcesContent'];
    version: TraceMap['version'];
    constructor(map: ConstructorParameters<typeof AnyMap>[0], mapUrl: Parameters<typeof AnyMap>[1]);
    static fromSourceMap(map: SourceMapGenerator, mapUrl: Parameters<typeof AnyMap>[1]): SourceMapConsumer;
    get mappings(): string;
    originalPositionFor(needle: Parameters<typeof originalPositionFor>[1]): ReturnType<typeof originalPositionFor>;
    generatedPositionFor(originalPosition: Parameters<typeof generatedPositionFor>[1]): ReturnType<typeof generatedPositionFor>;
    allGeneratedPositionsFor(originalPosition: Parameters<typeof generatedPositionFor>[1]): ReturnType<typeof generatedPositionFor>[];
    hasContentsOfAllSources(): boolean;
    sourceContentFor(source: string, nullOnMissing?: boolean): string | null;
    eachMapping(callback: Parameters<typeof eachMapping>[1], context?: any): void;
    destroy(): void;
}
export declare class SourceMapGenerator {
    private _map;
    constructor(opts: ConstructorParameters<typeof GenMapping>[0] | GenMapping);
    static fromSourceMap(consumer: SourceMapConsumer): SourceMapGenerator;
    addMapping(mapping: Parameters<typeof maybeAddMapping>[1]): ReturnType<typeof maybeAddMapping>;
    setSourceContent(source: Parameters<typeof setSourceContent>[1], content: Parameters<typeof setSourceContent>[2]): ReturnType<typeof setSourceContent>;
    toJSON(): ReturnType<typeof toEncodedMap>;
    toString(): string;
    toDecodedMap(): ReturnType<typeof toDecodedMap>;
}

// denoCacheMetadata={"headers":{"content-length":"2479","age":"302","access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","server-timing":"cfL4;desc=\"?proto=TCP&rtt=7941&min_rtt=6150&rtt_var=449&sent=214&recv=35&lost=0&retrans=0&sent_bytes=223877&recv_bytes=1155&delivery_rate=20614392&cwnd=349&unsent_bytes=0&cid=e236419c9303ab2c&ts=447&x=0\"","date":"Tue, 14 Jan 2025 11:09:04 GMT","server":"cloudflare","vary":"Origin, Accept-Encoding","cache-control":"public, max-age=31536000, immutable","cf-cache-status":"HIT","cf-ray":"901d2bf829790cba-EWR","access-control-allow-methods":"*","x-content-source":"esm-worker","last-modified":"Tue, 14 Jan 2025 11:04:02 GMT","content-type":"application/typescript; charset=utf-8","accept-ranges":"bytes"},"url":"https://esm.sh/v135/@jridgewell/source-map@0.3.6/dist/types/source-map.d.ts","time":1736852944}