/**
 * prettyTime options
 * - withSpaces Whether to use spaces to separate times, `1d2h3m5s` or `1d 2h 3m 5s`, default false
 * - toFixedVal value pass to toFixed for seconds, default 1
 * - longFormat Whether to use a long format, default false, `1d2h3m5s` or `1days 2hours 3minutes 5seconds`
 */
export interface prettyTimeOptions {
  withSpaces?: boolean;
  toFixedVal?: number;
  longFormat?: boolean;
}

/**
 * Convert time duration to a human readable string: 5d1h20m30s
 *
 * - milliseconds The number to format, unit milliseconds
 */
export function prettyTime(milliseconds: number, options: prettyTimeOptions = {
  withSpaces: false,
  toFixedVal: 1,
  longFormat: false,
}): string {
  let second = milliseconds / 1000;
  if (second < 60) {
    return unitToString(second, 0, options);
  }
  let minute = Math.floor(second / 60);
  second %= 60;
  if (minute < 60) {
    return unitToString(minute, 1, options) + unitToString(second, 0, options);
  }
  let hour = Math.floor(minute / 60);
  minute %= 60;
  if (hour < 24) {
    return unitToString(hour, 2, options) + unitToString(minute, 1, options) +
      unitToString(second, 0, options);
  }
  const day = Math.floor(hour / 24);
  hour %= 24;
  return unitToString(day, 3, options) + unitToString(hour, 2, options) +
    unitToString(minute, 1, options) +
    unitToString(second, 0, options);
}

function unitToString(
  val: number,
  i: number,
  { withSpaces = false, toFixedVal = 1, longFormat = false }: prettyTimeOptions,
): string {
  const units = longFormat
    ? ["second", "minute", "hour", "day"]
    : ["s", "m", "h", "d"];
  const unit = longFormat && (val >= 2 || (val > 1 && toFixedVal > 0))
    ? units[i] + "s"
    : units[i];
  if (i == 0) {
    return val.toFixed(toFixedVal) + unit;
  }
  return val + (withSpaces ? unit + " " : unit);
}

// denoCacheMetadata={"headers":{"cross-origin-opener-policy":"same-origin","server":"deno/gcp-us-east4","x-amz-replication-status":"COMPLETED","last-modified":"Wed, 22 Feb 2023 02:40:09 GMT","strict-transport-security":"max-age=63072000; includeSubDomains; preload","content-length":"1826","x-amz-server-side-encryption":"AES256","x-amz-version-id":"ZIlPols_5Ec5n7x7Z7c7EEUNEoDgnJfV","x-cache":"Miss from cloudfront","date":"Tue, 14 Jan 2025 11:09:05 GMT","server-timing":"fetchSource;dur=90","x-content-type-options":"nosniff","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","via":"http/2 edgeproxy-h","x-frame-options":"DENY","accept-ranges":"bytes","referrer-policy":"strict-origin-when-cross-origin","access-control-allow-origin":"*","cache-control":"public, max-age=31536000, immutable","cross-origin-embedder-policy":"same-origin","cross-origin-resource-policy":"same-origin","etag":"\"1fe3926711d152b03c3fac4a1819381c\"","x-amz-cf-id":"EbVMHloX5FJ4FAVTiXzO4pAuYXiA6h3ft-rOrtOV_Asps2CoKVQScA==","content-type":"application/typescript; charset=utf-8","x-amz-cf-pop":"IAD12-P5","vary":"Accept-Encoding, Origin"},"url":"https://deno.land/x/progress@v1.3.8/time.ts","time":1736852944}