// src/types.ts
// Type guard for Module
export function isModule(value) {
  return typeof value === "object" && value !== null && "path" in value && "code" in value && "dependencies" in value && "ast" in value;
}
export class BaseCommand {
  name = "";
  description;
  options;
  subcommands;
  aliases;
  category;
  permissions;
  lifecycle;
  validation;
  constructor(config){
    Object.assign(this, config);
  }
  async validateArgs(args) {
    if (!this.validation) return true;
    // Validate flags
    if (this.validation.flags) {
      for (const [flag, validator] of Object.entries(this.validation.flags)){
        if (args.flags[flag] !== undefined) {
          const isValid = await validator(args.flags[flag]);
          if (!isValid) return false;
        }
      }
    }
    // Validate args
    if (this.validation.args) {
      for (const [index, validator] of Object.entries(this.validation.args)){
        const idx = parseInt(index);
        if (!isNaN(idx) && args.command[idx] !== undefined) {
          const isValid = await validator(args.command[idx]);
          if (!isValid) return false;
        }
      }
    }
    // Run custom validators
    if (this.validation.custom) {
      for (const validator of this.validation.custom){
        const isValid = await validator(args);
        if (!isValid) return false;
      }
    }
    return true;
  }
  async executeWithLifecycle(args) {
    try {
      if (this.lifecycle?.beforeExecute) {
        await this.lifecycle.beforeExecute();
      }
      const isValid = await this.validateArgs(args);
      if (!isValid) {
        throw new Error("Validation failed");
      }
      await this.action(args);
      if (this.lifecycle?.afterExecute) {
        await this.lifecycle.afterExecute();
      }
    } catch (error) {
      if (this.lifecycle?.onError) {
        await this.lifecycle.onError(error instanceof Error ? error : new Error(String(error)));
      }
      throw error;
    } finally{
      if (this.lifecycle?.cleanup) {
        await this.lifecycle.cleanup();
      }
    }
  }
}
//# sourceMappingURL=data:application/json;base64,
// denoCacheMetadata=2884535944312582750,1906079699878186792