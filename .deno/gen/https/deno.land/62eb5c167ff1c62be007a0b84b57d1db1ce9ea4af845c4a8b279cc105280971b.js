// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
/** A library of assertion functions.
 * If the assertion is false an `AssertionError` will be thrown which will
 * result in pretty-printed diff of failing assertion.
 *
 * This module is browser compatible, but do not rely on good formatting of
 * values for AssertionError messages in browsers.
 *
 * ```ts
 * import { assert } from "https://deno.land/std@$STD_VERSION/assert/assert.ts";
 *
 * assert("I am truthy"); // Doesn't throw
 * assert(false); // Throws `AssertionError`
 * ```
 *
 * @module
 */ export * from "./assert_almost_equals.ts";
export * from "./assert_array_includes.ts";
export * from "./assert_equals.ts";
export * from "./assert_exists.ts";
export * from "./assert_false.ts";
export * from "./assert_greater_or_equal.ts";
export * from "./assert_greater.ts";
export * from "./assert_instance_of.ts";
export * from "./assert_is_error.ts";
export * from "./assert_less_or_equal.ts";
export * from "./assert_less.ts";
export * from "./assert_match.ts";
export * from "./assert_not_equals.ts";
export * from "./assert_not_instance_of.ts";
export * from "./assert_not_match.ts";
export * from "./assert_not_strict_equals.ts";
export * from "./assert_object_match.ts";
export * from "./assert_rejects.ts";
export * from "./assert_strict_equals.ts";
export * from "./assert_string_includes.ts";
export * from "./assert_throws.ts";
export * from "./assert.ts";
export * from "./assertion_error.ts";
export * from "./equal.ts";
export * from "./fail.ts";
export * from "./unimplemented.ts";
export * from "./unreachable.ts";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjIyNC4wL2Fzc2VydC9tb2QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyNCB0aGUgRGVubyBhdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBNSVQgbGljZW5zZS5cbi8vIFRoaXMgbW9kdWxlIGlzIGJyb3dzZXIgY29tcGF0aWJsZS5cblxuLyoqIEEgbGlicmFyeSBvZiBhc3NlcnRpb24gZnVuY3Rpb25zLlxuICogSWYgdGhlIGFzc2VydGlvbiBpcyBmYWxzZSBhbiBgQXNzZXJ0aW9uRXJyb3JgIHdpbGwgYmUgdGhyb3duIHdoaWNoIHdpbGxcbiAqIHJlc3VsdCBpbiBwcmV0dHktcHJpbnRlZCBkaWZmIG9mIGZhaWxpbmcgYXNzZXJ0aW9uLlxuICpcbiAqIFRoaXMgbW9kdWxlIGlzIGJyb3dzZXIgY29tcGF0aWJsZSwgYnV0IGRvIG5vdCByZWx5IG9uIGdvb2QgZm9ybWF0dGluZyBvZlxuICogdmFsdWVzIGZvciBBc3NlcnRpb25FcnJvciBtZXNzYWdlcyBpbiBicm93c2Vycy5cbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAkU1REX1ZFUlNJT04vYXNzZXJ0L2Fzc2VydC50c1wiO1xuICpcbiAqIGFzc2VydChcIkkgYW0gdHJ1dGh5XCIpOyAvLyBEb2Vzbid0IHRocm93XG4gKiBhc3NlcnQoZmFsc2UpOyAvLyBUaHJvd3MgYEFzc2VydGlvbkVycm9yYFxuICogYGBgXG4gKlxuICogQG1vZHVsZVxuICovXG5cbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9hbG1vc3RfZXF1YWxzLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRfYXJyYXlfaW5jbHVkZXMudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9lcXVhbHMudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9leGlzdHMudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9mYWxzZS50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYXNzZXJ0X2dyZWF0ZXJfb3JfZXF1YWwudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9ncmVhdGVyLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRfaW5zdGFuY2Vfb2YudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9pc19lcnJvci50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYXNzZXJ0X2xlc3Nfb3JfZXF1YWwudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9sZXNzLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRfbWF0Y2gudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9ub3RfZXF1YWxzLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRfbm90X2luc3RhbmNlX29mLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRfbm90X21hdGNoLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRfbm90X3N0cmljdF9lcXVhbHMudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9vYmplY3RfbWF0Y2gudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Fzc2VydF9yZWplY3RzLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRfc3RyaWN0X2VxdWFscy50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYXNzZXJ0X3N0cmluZ19pbmNsdWRlcy50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYXNzZXJ0X3Rocm93cy50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYXNzZXJ0LnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hc3NlcnRpb25fZXJyb3IudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VxdWFsLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9mYWlsLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91bmltcGxlbWVudGVkLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91bnJlYWNoYWJsZS50c1wiO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBFQUEwRTtBQUMxRSxxQ0FBcUM7QUFFckM7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBRUQsY0FBYyw0QkFBNEI7QUFDMUMsY0FBYyw2QkFBNkI7QUFDM0MsY0FBYyxxQkFBcUI7QUFDbkMsY0FBYyxxQkFBcUI7QUFDbkMsY0FBYyxvQkFBb0I7QUFDbEMsY0FBYywrQkFBK0I7QUFDN0MsY0FBYyxzQkFBc0I7QUFDcEMsY0FBYywwQkFBMEI7QUFDeEMsY0FBYyx1QkFBdUI7QUFDckMsY0FBYyw0QkFBNEI7QUFDMUMsY0FBYyxtQkFBbUI7QUFDakMsY0FBYyxvQkFBb0I7QUFDbEMsY0FBYyx5QkFBeUI7QUFDdkMsY0FBYyw4QkFBOEI7QUFDNUMsY0FBYyx3QkFBd0I7QUFDdEMsY0FBYyxnQ0FBZ0M7QUFDOUMsY0FBYywyQkFBMkI7QUFDekMsY0FBYyxzQkFBc0I7QUFDcEMsY0FBYyw0QkFBNEI7QUFDMUMsY0FBYyw4QkFBOEI7QUFDNUMsY0FBYyxxQkFBcUI7QUFDbkMsY0FBYyxjQUFjO0FBQzVCLGNBQWMsdUJBQXVCO0FBQ3JDLGNBQWMsYUFBYTtBQUMzQixjQUFjLFlBQVk7QUFDMUIsY0FBYyxxQkFBcUI7QUFDbkMsY0FBYyxtQkFBbUIifQ==
// denoCacheMetadata=7856331883126230053,3796351116413555635