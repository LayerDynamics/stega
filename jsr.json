{
	"name": "@layerdynamics/stega",
	"version": "1.0.0-beta.5",
	"description": "A comprehensive CLI framework for Deno featuring advanced command management, workflow automation, and plugin architecture",
	"runtime": {
		"deno": ">=1.37",
		"node": ">=18.0.0",
		"bun": ">=1.0.0"
	},
	"exports": {
		".": {
			"types": "./mod.ts",
			"import": "./mod.ts"
		},
		"./cli": {
			"types": "./src/core.ts",
			"import": "./src/core.ts"
		},
		"./commands": "./src/commands/mod.ts",
		"./plugins": "./src/plugin.ts",
		"./workflow": "./src/commands/workflow_command.ts",
		"./template": "./src/commands/template_command.ts",
		"./service": "./src/commands/service_command.ts",
		"./compiler": "./src/compiler/mod.ts",
		"./prompt": "./src/prompt/mod.ts",
		"./utils": "./src/utils/mod.ts",
		"./logger": "./src/logger/mod.ts",
		"./middleware": "./src/middleware/mod.ts",
		"./types": "./src/types/mod.ts",
		"./error": "./src/error.ts",
		"./progress": "./src/progress.ts",
		"./prompts": "./src/prompts.ts",
		"./i18n": "./src/i18n.ts"
	},
	"publish": {
		"include": [
			"src/**/*.ts",
			"plugins/**/*.ts",
			"docs/**/*.md",
			"examples/**/*.ts",
			"locales/**/*.json",
			"README.md",
			"LICENSE",
			"mod.ts"
		],
		"exclude": [
			"dist/",
			"cov/",
			"tests/",
			"test-bin",
			".history/",
			".vscode/",
			".github/",
			".gitignore",
			".gitattributes",
			".gitmodules",
			".gitkeep",
			".git"
		]
	},
	"compilerOptions": {
		"lib": ["deno.window", "deno.ns"],
		"strict": true,
		"allowUnusedLabels": false,
		"allowUnreachableCode": false,
		"types": ["./src/types/symbols.d.ts"]
	},
	"lint": {
		"include": ["src/", "plugins/", "examples/"],
		"exclude": ["cov/", "dist/", "tests/"],
		"rules": {
			"tags": ["recommended"],
			"exclude": [
				"no-inferrable-types",
				"require-await",
				"no-unused-vars",
				"no-control-regex"
			]
		}
	},
	"fmt": {
		"include": ["src/", "plugins/", "examples/"],
		"exclude": ["cov/", "dist/", "tests/"],
		"useTabs": true,
		"lineWidth": 80,
		"indentWidth": 2,
		"singleQuote": false,
		"proseWrap": "preserve",
		"semiColons": true
	},
	"test": {
		"include": ["tests/"],
		"exclude": ["tests/fixtures/dynamic/", "tests/fixtures/generated/"]
	},
	"tasks": {
		"dev": "deno run --watch mod.ts",
		"test": "deno test --allow-read --allow-write --allow-sys --allow-net --allow-env --allow-run --allow-ffi --unstable-kv --unstable-fs",
		"test:init": "mkdir -p tests/fixtures/templates tests/fixtures/plugins tests/fixtures/locales tests/fixtures/tmp && cp -n ./tests/fixtures/locales/en.json.template ./tests/fixtures/locales/en.json 2>/dev/null || echo '{\"available_commands\":\"Available Commands:\"}' > ./tests/fixtures/locales/en.json",
		"test:cache": "rm -rf .deno && mkdir -p .deno && deno cache --reload 'tests/**/*.ts' 'src/**/*.ts' && mkdir -p tests/fixtures/dynamic",
		"test:clean": "mkdir -p tests/fixtures/templates tests/fixtures/plugins tests/fixtures/locales tests/fixtures/tmp && rm -rf coverage coverage.lcov cov cov.lcov tmp .deno && find tests/fixtures -mindepth 2 -delete || true",
		"build": "deno compile --allow-run --allow-read --allow-write --allow-env mod.ts",
		"build:all": "mkdir -p dist && deno task build:linux && deno task build:windows && deno task build:macos",
		"lint": "deno lint",
		"fmt": "deno fmt",
		"check": "deno check src/mod.ts",
		"doc": "deno doc --html --lint",
		"prepublish": "deno fmt --check && deno lint && deno test -A"
	},
	"imports": {
		"@std/assert": "jsr:@std/assert@^0.224.0",
		"@std/log": "jsr:@std/log@^0.224.0",
		"@std/path": "jsr:@std/path@^0.224.0",
		"@std/crypto": "jsr:@std/crypto@^0.224.0",
		"@std/testing": "jsr:@std/testing@^0.224.0",
		"@src/": "./src/",
		"@test/": "./tests/",
		"@plugins/": "./plugins/"
	},
	"dependencies": {
		"@std/path": "^0.224.0",
		"@std/crypto": "^0.224.0",
		"@std/log": "^0.224.0",
		"cliffy": "1.0.0-rc.3",
		"source-map": "0.7.4",
		"terser": "5.14.2",
		"ts-morph": "17.0.1",
		"progress": "2.0.3"
	},
	"devDependencies": {
		"@std/testing": "^0.224.0"
	}
}
