name: Publish

on:
  push:
    tags: ["v*"]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Initialize Dependencies
        run: |
          # Remove existing lockfile
          rm -f deno.lock
          
          # Cache and create fresh lockfile
          deno cache --lock=deno.lock --lock-write mod.ts
          
          # Verify dependencies
          deno cache --reload --lock=deno.lock mod.ts

      - name: Clean Test Environment
        run: |
          deno task test:clean

      - name: Setup Test Environment
        run: |
          # Create and set permissions for temp directories
          sudo mkdir -p /tmp/test_tmp /tmp/deno_dir
          sudo chmod -R 777 /tmp/test_tmp /tmp/deno_dir
          
          # Create test directories
          mkdir -p tests/fixtures/{templates,plugins,locales,tmp,dynamic,generated}
          chmod -R 777 tests/fixtures
          
          # Setup temporary file permissions
          sudo chmod 777 /tmp
          
          # Initialize test data
          deno task test:init
          deno task test:cache

      - name: Pre-Test Format
        run: |
          # Format everything before tests
          deno fmt
          deno fmt tests/
          
          # Verify formatting
          deno fmt --check

      - name: Format and Verify
        run: |
          # First run formatter
          deno fmt
          
          # Then check if everything is formatted
          deno fmt --check

      - name: Run Linter
        run: deno lint

      - name: Run Tests with Coverage
        env:
          DENO_DIR: /tmp/deno_dir
          TMPDIR: /tmp/test_tmp
          TEST_MODE: ci
          NO_COLOR: true
          DEBUG: true
          LOCALE: en
          DENO_PERMISSIONS: allow-all
        run: |
          # Ensure temp directories exist with proper permissions
          sudo mkdir -p $TMPDIR
          sudo chmod -R 777 $TMPDIR
          sudo chown -R $USER:$USER $TMPDIR
          
          # Run tests with all required permissions
          deno test --allow-all --coverage=coverage --parallel || exit 1
          
          # Format any generated test files
          deno fmt tests/fixtures/dynamic/
          
          # Generate coverage
          deno coverage coverage --lcov > coverage.lcov

      - name: Post-Test Format
        run: |
          # Format everything after tests
          deno fmt
          deno fmt tests/
          find tests/fixtures/dynamic -name "*.ts" -exec deno fmt {} \;
          
          # Final format check
          deno fmt --check

      - name: Build Binaries
        run: |
          mkdir -p dist
          deno compile --target x86_64-unknown-linux-gnu --output dist/stega-linux mod.ts
          deno compile --target x86_64-pc-windows-msvc --output dist/stega-windows.exe mod.ts
          deno compile --target x86_64-apple-darwin --output dist/stega-macos mod.ts

      - name: Run Verification
        run: deno task verify

      - name: Verify Package
        run: deno publish --dry-run

      - name: Publish to JSR
        if: startsWith(github.ref, 'refs/tags/v')
        run: deno publish
