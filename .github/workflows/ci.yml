name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.34.0

      - name: Cache Deno Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/deno
            ~/.deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.json', '**/deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Verify Formatting
        run: deno fmt --check

      - name: Run Linter
        run: deno task lint

      - name: Clean Coverage Data
        run: deno task test:clean

      - name: Run Tests with Coverage
        run: deno task test

      - name: Generate Coverage Report
        run: deno task test:coverage

      - name: Build Verification
        run: |
          deno task build:linux
          deno task build:windows
          deno task build:macos
          
      - name: Upload Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: |
            cov.lcov
            cov/
          if-no-files-found: error

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist/
          if-no-files-found: error

      - name: Cache Cleanup
        if: always()
        run: deno task cache:clean