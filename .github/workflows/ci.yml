name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Initialize Dependencies
        run: |
          rm -f deno.lock
          deno cache --reload mod.ts
          deno cache --lock=deno.lock --lock-write mod.ts
          deno cache --lock=deno.lock mod.ts

      - name: Cache Deno Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/deno
            ~/.deno
            /tmp/1491d1ce2c88246d
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.json', '**/deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Clean Temporary Directories
        run: rm -rf /tmp/1491d1ce2c88246d || true

      - name: Ensure Temporary Directory
        run: mkdir -p /tmp/1491d1ce2c88246d || true

      - name: Deno Version
        run: deno --version

      - name: Verify Formatting
        run: deno fmt --check

      - name: Run Linter
        run: deno lint

      - name: Clean Coverage Data
        run: deno task test:clean

      - name: Clear Deno Cache
        run: deno cache --reload mod.ts

      - name: Create Locales Directory
        run: |
          mkdir -p locales
          echo '{}' > locales/en.json

      - name: Run Tests with Coverage
        timeout-minutes: 10
        run: |
          deno test --allow-read --allow-env --allow-write --allow-run --allow-net \
            --coverage=cov --parallel --no-check \
            --allow-read=./locales
          deno test --coverage=cov --parallel --no-check \
            --allow-read --allow-env --allow-write --allow-run --allow-net \
            --allow-read=./locales
          deno coverage cov --lcov --output=cov.lcov

      - name: List Temporary Directory Contents
        run: ls -R /tmp/1491d1ce2c88246d

      - name: Build Verification
        run: |
          deno task build:linux
          deno task build:windows
          deno task build:macos
          
      - name: Upload Coverage Results
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: |
            cov.lcov
            cov/
          if-no-files-found: error

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist/
          if-no-files-found: error

      - name: Upload Lockfile
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: deno-lockfile
          path: deno.lock
          if-no-files-found: warn

      - name: Cache Cleanup
        if: always()
        run: deno cache --reload mod.ts