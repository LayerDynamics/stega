{
	"compilerOptions": {
		"lib": ["deno.window", "deno.ns"],
		"strict": true,
		"allowUnusedLabels": false,
		"allowUnreachableCode": false,
		"types": ["./src/types/symbols.d.ts"]
	},
	"lint": {
		"include": ["src/", "tests/"],
		"exclude": ["cov/", "dist/"],
		"rules": {
			"tags": ["recommended"],
			"exclude": [
				"no-inferrable-types",
				"require-await",
				"no-unused-vars",
				"no-control-regex"
			]
		}
	},
	"fmt": {
		"include": ["src/", "tests/"],
		"exclude": ["cov/", "dist/"],
		"useTabs": true,
		"lineWidth": 80,
		"indentWidth": 2,
		"singleQuote": false,
		"proseWrap": "preserve",
		"semiColons": true
	},
	"test": {
		"include": ["tests/"],
		"exclude": ["tests/fixtures/dynamic/", "tests/fixtures/generated/"]
	},
	"tasks": {
		"dev": "deno run --watch mod.ts",
		"test": "deno test --allow-all --coverage=coverage --parallel --trace-ops",
		"test:cache": "rm -rf .deno && mkdir -p .deno && deno cache --reload 'tests/**/*.ts' 'src/**/*.ts' && mkdir -p tests/fixtures/dynamic",
		"test:clean": "rm -rf coverage coverage.lcov cov cov.lcov tmp .deno",
		"start": "deno run --allow-all mod.ts",
		"build": "deno compile --allow-run --allow-read --allow-write --allow-env mod.ts",
		"build:linux": "deno compile --target x86_64-unknown-linux-gnu --output ./dist/stega-linux --allow-read --allow-write --allow-env mod.ts",
		"build:windows": "deno compile --target x86_64-pc-windows-msvc --output ./dist/stega-windows.exe --allow-read --allow-write --allow-env mod.ts",
		"build:macos": "deno compile --target x86_64-apple-darwin --output ./dist/stega-macos --allow-read --allow-write --allow-env mod.ts",
		"build:all": "mkdir -p dist && deno task build:linux && deno task build:windows && deno task build:macos",
		"lint": "deno lint",
		"lint:fix": "deno lint --quiet",
		"cache:clean": "deno cache --reload mod.ts",
		"cache:update": "deno cache mod.ts",
		"fmt": "deno fmt",
		"fmt:check": "deno fmt --check",
		"fmt:fix": "deno task fmt && deno lint --fix",
		"fmt:all": "./scripts/format-fix.sh",
		"check": "deno check src/mod.ts",
		"prepublish": "deno fmt --check && deno lint && deno test -A"
	},
	"imports": {
		"@std/assert": "https://deno.land/std@0.224.0/assert/mod.ts",
		"@std/": "jsr:@std/",
		"@src/": "./src/",
		"@test/": "./tests/",
		"@std/path/": "https://deno.land/std@0.224.0/path/"
	}
}
